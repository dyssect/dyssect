#!/usr/bin/env python

import math
import time
import scapy.all as scapy

################################################################################################
#
dpdk_in         = int($INCOMING_PORT)
dpdk_out        = int($OUTGOING_PORT)
shards          = int($SHARDS)
sfc_length      = int($SFC_LENGTH)
core_list       = list(map(int, ($CORE_LIST).split(",")))
CONTROLLER_CORE = int($CONTROLLER_CORE)
pipe_dir        = $PIPE_DIRECTORY

#
################################################################################################

queues          = len(core_list)

pincoming       = PMDPort(port_id=dpdk_in, num_inc_q=queues, num_out_q=2*queues)

if dpdk_in == dpdk_out:

    poutgoing = pincoming

else:

    poutgoing   = PMDPort(port_id=dpdk_out, num_inc_q=queues, num_out_q=2*queues)

ext_addrs = [
        {'ext_addr': '10.0.0.1'}, {'ext_addr': '10.0.0.10'}, {'ext_addr': '10.0.0.100'},
        {'ext_addr': '10.0.1.1'}, {'ext_addr': '10.0.10.10'}, {'ext_addr': '10.0.100.100'},
        {'ext_addr': '10.1.1.1'}, {'ext_addr': '10.10.10.10'}, {'ext_addr': '10.100.100.100'},
        {'ext_addr': '1.1.1.1'}, {'ext_addr': '1.10.10.10'}, {'ext_addr': '1.100.100.100'},
        {'ext_addr': '10.1.1.1'}, {'ext_addr': '10.10.10.10'}, {'ext_addr': '10.100.100.100'},
        {'ext_addr': '1.1.1.1'}, {'ext_addr': '1.10.10.10'}, {'ext_addr': '1.100.100.100'},

        {'ext_addr': '172.16.0.1'}, {'ext_addr': '172.16.0.10'}, {'ext_addr': '172.16.0.100'},
        {'ext_addr': '172.16.1.1'}, {'ext_addr': '172.16.10.10'}, {'ext_addr': '172.16.100.100'},
        {'ext_addr': '172.160.0.1'}, {'ext_addr': '172.160.0.10'}, {'ext_addr': '172.160.0.100'},
        {'ext_addr': '17.160.0.1'}, {'ext_addr': '17.160.0.10'}, {'ext_addr': '17.160.0.100'},
        {'ext_addr': '172.160.0.1'}, {'ext_addr': '172.160.0.10'}, {'ext_addr': '172.160.0.100'},
        {'ext_addr': '17.160.0.1'}, {'ext_addr': '17.160.0.10'}, {'ext_addr': '17.160.0.100'},

        {'ext_addr': '192.0.10.1'}, {'ext_addr': '192.10.10.10'}, {'ext_addr': '192.100.10.100'},
        {'ext_addr': '192.168.10.1'}, {'ext_addr': '192.168.10.10'}, {'ext_addr': '192.168.10.100'},
        {'ext_addr': '192.168.100.1'}, {'ext_addr': '192.168.100.10'}, {'ext_addr': '192.168.100.100'},
        {'ext_addr': '19.168.100.1'}, {'ext_addr': '19.168.100.10'}, {'ext_addr': '19.168.100.100'},
        {'ext_addr': '192.168.100.1'}, {'ext_addr': '192.168.100.10'}, {'ext_addr': '192.168.100.100'},
        {'ext_addr': '19.168.100.1'}, {'ext_addr': '19.168.100.10'}, {'ext_addr': '19.168.100.100'},
]

bess.pause_all()

controller0::DyssectController(port=pincoming.name, sfc_length=sfc_length, total_shards=shards, pipe_directory=pipe_dir, cores=core_list)

bess.add_worker(wid=CONTROLLER_CORE, core=CONTROLLER_CORE)
bess.attach_task(module_name=controller0.name, wid=CONTROLLER_CORE)

for i in range(queues):
    name='w%d' % (i)
    w=DyssectWorkingCore(name=name, port=pincoming, sfc_length=sfc_length, total_shards=shards, qid=i, id=i)

    w -> \
        dyNAT(handle=0, ext_addrs=ext_addrs) -> \
	dyIDS(handle=1) -> \
        MACSwap() -> \
        QueueOut(port=poutgoing, qid=i)

    controller0.add_working(name=w.name, tc='!leaf_' + name + ':0', wid=i)

n = queues/2
for i in range(n):
    name='o%d' % (i)
    o=DyssectOffloadingCore(name=name, id=128+i)

    o -> \
        dyNAT(handle=0, ext_addrs=ext_addrs) -> \
	dyIDS(handle=1) -> \
        MACSwap() -> \
        QueueOut(port=poutgoing, qid=queues+i)

    controller0.add_offloading(name=o.name, tc='!leaf_' + name + ':0', wid=queues+i)

bess.resume_worker(CONTROLLER_CORE)
controller0.start()
